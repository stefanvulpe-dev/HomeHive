@page "/BuyEstates"
@using HomeHive.UI.Components.General
@using HomeHive.UI.ViewModels.Estates
@using HomeHive.UI.Interfaces
@using HomeHive.UI.Pages.Profile
@inject IEstateDataService EstateService
@inject ILogger<ListedEstates> Logger
<PageTitle>Estates</PageTitle>

<Navbar></Navbar>
<section class="about-one min-vh-100 p-0">
    <SearchBar></SearchBar>
    <div class="row justify-content-center m-3 m-md-0">
         @if (_isLoading)
                    {
                        <div class="mt-4 fw-bold" style="display:flex; gap:10px; justify-content:center; align-items:center">
                            <div class="spinner-border" role="status"></div>
                            Loading...
                        </div>
                    }
                    else
                    {
                        @if (EstatesList != null && EstatesList.Any())
                        {
                            @foreach (var estate in EstatesList)
                            {
                                <EstateCard Estate="@estate"></EstateCard>
                            }
                        }
                        else
                        {
                            <div class="mt-4 col-12">
                                <p class="text-center">There are no properties for sale.</p>
                            </div>
                        }
                    }
    </div>
</section>
<Footer></Footer>


@code {
    private List<EstateViewModel>? EstatesList { get; set; }
    
    private bool _isLoading = true;
    private string SelectedCategory { get; set; } = "ForSale";

    protected override async Task OnInitializedAsync()
    {
        var result = await EstateService.GetAll();

        if (result is { IsSuccess: true })
        {
            if (result.Estates != null)
                EstatesList = result.Estates
                    .Where(e => e.EstateCategory == SelectedCategory) 
                    .Select(e => new EstateViewModel
                    {
                        Id = e.Id,
                        OwnerId = e.OwnerId,
                        EstateCategory = e.EstateCategory,
                        EstateType = e.EstateType,
                        Name = e.Name,
                        Location = e.Location,
                        Price = e.Price,
                        TotalArea = e.TotalArea,
                        Utilities = e.Utilities!,
                        Description = e.Description,
                        EstateAvatar = e.EstateAvatar
                    }).ToList();
        }
        else
        {
            Logger.LogError($"Error getting estates: {result?.Message}");
        }
        _isLoading = false;
    }


}