@using HomeHive.UI.ViewModels
@using iTextSharp.text
@using iTextSharp.text.pdf
@inject IJSRuntime JSRuntime

<div class="card col-md-3 m-md-3 mb-sm-3">
    <div class="card-body">
        <h5 class=" fs-3 card-title">@Contract?.ContractType Offer</h5>
        @(Contract?.Description != null){
            <small>@Contract?.Description</small>
        }
        <div class="row">
            <div class="d-flex justify-content-start align-items-center">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-geo-alt" viewBox="0 0 16 16">
                    <path d="M12.166 8.94c-.524 1.062-1.234 2.12-1.96 3.07A32 32 0 0 1 8 14.58a32 32 0 0 1-2.206-2.57c-.726-.95-1.436-2.008-1.96-3.07C3.304 7.867 3 6.862 3 6a5 5 0 0 1 10 0c0 .862-.305 1.867-.834 2.94M8 16s6-5.686 6-10A6 6 0 0 0 2 6c0 4.314 6 10 6 10"/>
                    <path d="M8 8a2 2 0 1 1 0-4 2 2 0 0 1 0 4m0 1a3 3 0 1 0 0-6 3 3 0 0 0 0 6"/>
                </svg>
                <NavLink href="@_estateUrl">
                    <span class="ms-2 d-inline" style="font-weight:bold">Estate:</span>
                    Estate Name 
                </NavLink>
            </div>
            <div class="d-flex justify-content-start align-items-center">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-app-indicator" viewBox="0 0 16 16">
                  <path d="M5.5 2A3.5 3.5 0 0 0 2 5.5v5A3.5 3.5 0 0 0 5.5 14h5a3.5 3.5 0 0 0 3.5-3.5V8a.5.5 0 0 1 1 0v2.5a4.5 4.5 0 0 1-4.5 4.5h-5A4.5 4.5 0 0 1 1 10.5v-5A4.5 4.5 0 0 1 5.5 1H8a.5.5 0 0 1 0 1z"/>
                  <path d="M16 3a3 3 0 1 1-6 0 3 3 0 0 1 6 0"/>
                </svg>
                <span class="ms-2 d-inline" style="font-weight:bold">Status:</span>
                @Contract?.Status
            </div>
            <div class="d-flex justify-content-start align-items-center">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-person" viewBox="0 0 16 16">
                    <path d="M8 8a3 3 0 1 0 0-6 3 3 0 0 0 0 6m2-3a2 2 0 1 1-4 0 2 2 0 0 1 4 0m4 8c0 1-1 1-1 1H3s-1 0-1-1 1-4 6-4 6 3 6 4m-1-.004c-.001-.246-.154-.986-.832-1.664C11.516 10.68 10.289 10 8 10s-3.516.68-4.168 1.332c-.678.678-.83 1.418-.832 1.664z"/>
                </svg>
                <span class="ms-2 d-inline" style="font-weight:bold">Client:</span>
                Client name
            </div>
            @if (Contract?.EndDate == null)
            {
                <div class="d-flex justify-content-start align-items-center">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-calendar-check" viewBox="0 0 16 16">
                        <path d="M10.854 7.146a.5.5 0 0 1 0 .708l-3 3a.5.5 0 0 1-.708 0l-1.5-1.5a.5.5 0 1 1 .708-.708L7.5 9.793l2.646-2.647a.5.5 0 0 1 .708 0"/>
                        <path d="M3.5 0a.5.5 0 0 1 .5.5V1h8V.5a.5.5 0 0 1 1 0V1h1a2 2 0 0 1 2 2v11a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V3a2 2 0 0 1 2-2h1V.5a.5.5 0 0 1 .5-.5M1 4v10a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V4z"/>
                    </svg>
                    <span class="ms-2 d-inline" style="font-weight:bold">Date:</span>
                    @Contract?.StartDate
                </div>
            }
            else
            {
                <div class="d-flex justify-content-start align-items-center">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-calendar-check" viewBox="0 0 16 16">
                        <path d="M10.854 7.146a.5.5 0 0 1 0 .708l-3 3a.5.5 0 0 1-.708 0l-1.5-1.5a.5.5 0 1 1 .708-.708L7.5 9.793l2.646-2.647a.5.5 0 0 1 .708 0"/>
                        <path d="M3.5 0a.5.5 0 0 1 .5.5V1h8V.5a.5.5 0 0 1 1 0V1h1a2 2 0 0 1 2 2v11a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V3a2 2 0 0 1 2-2h1V.5a.5.5 0 0 1 .5-.5M1 4v10a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V4z"/>
                    </svg>
                    <span class="ms-2 d-inline" style="font-weight:bold">Start date:</span>
                    @Contract.StartDate
                </div>
                <div class="d-flex justify-content-start align-items-center">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-calendar-check" viewBox="0 0 16 16">
                        <path d="M10.854 7.146a.5.5 0 0 1 0 .708l-3 3a.5.5 0 0 1-.708 0l-1.5-1.5a.5.5 0 1 1 .708-.708L7.5 9.793l2.646-2.647a.5.5 0 0 1 .708 0"/>
                        <path d="M3.5 0a.5.5 0 0 1 .5.5V1h8V.5a.5.5 0 0 1 1 0V1h1a2 2 0 0 1 2 2v11a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V3a2 2 0 0 1 2-2h1V.5a.5.5 0 0 1 .5-.5M1 4v10a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V4z"/>
                    </svg>
                    <span class="ms-2 d-inline" style="font-weight:bold">End date:</span>
                    @Contract.EndDate
                </div>
            }
            <div class="d-flex justify-content-start align-items-center">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-tags" viewBox="0 0 16 16">
                    <path d="M3 2v4.586l7 7L14.586 9l-7-7zM2 2a1 1 0 0 1 1-1h4.586a1 1 0 0 1 .707.293l7 7a1 1 0 0 1 0 1.414l-4.586 4.586a1 1 0 0 1-1.414 0l-7-7A1 1 0 0 1 2 6.586z"/>
                    <path d="M5.5 5a.5.5 0 1 1 0-1 .5.5 0 0 1 0 1m0 1a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3M1 7.086a1 1 0 0 0 .293.707L8.75 15.25l-.043.043a1 1 0 0 1-1.414 0l-7-7A1 1 0 0 1 0 7.586V3a1 1 0 0 1 1-1z"/>
                </svg>
                <span class="ms-2 d-inline" style="font-weight:bold">Offered Price:</span>
                @Contract?.Price $
            </div>
        </div>
        <div class="mt-4 d-flex justify-content-center gap-1">
             <button @onclick="DownloadContract" class="btn btn-primary">Download contract</button>
        </div>
    </div>
</div>

@code {

    [Parameter]
    public ContractViewModel? Contract { get; set; }

    private string? _estateUrl;

    protected override void OnInitialized()
    {
        _estateUrl = $"/ViewEstate/{Contract?.EstateId}";
        base.OnInitialized();
    }

    private async Task DownloadContract()
    {
        var pdfDoc = new Document();

        using var memoryStream = new MemoryStream();
        var writer = PdfWriter.GetInstance(pdfDoc, memoryStream);
        pdfDoc.Open();

        pdfDoc.NewPage();

        var title = new Paragraph("Real Estate Agreement")
        {
            Alignment = Element.ALIGN_CENTER
        };
        pdfDoc.Add(title);

        pdfDoc.Add(new Paragraph("\n\n"));

        pdfDoc.Add(new Paragraph($"This agreement is made on this date between the parties:"));
        pdfDoc.Add(new Paragraph($"Seller: "));
        pdfDoc.Add(new Paragraph($"Buyer: "));
        pdfDoc.Add(new Paragraph($"Property: "));
        pdfDoc.Add(new Paragraph($"Address: "));
            
        if (Contract?.EndDate != null)
        {
            pdfDoc.Add(new Paragraph("The parties agree to the following terms regarding the rental of the property:"));
            pdfDoc.Add(new Paragraph($"Rent: ${Contract?.Price}"));
            pdfDoc.Add(new Paragraph($"Lease Start Date: {Contract?.StartDate}"));
            pdfDoc.Add(new Paragraph($"Lease End Date: {Contract?.EndDate}"));
            pdfDoc.Add(new Paragraph("This agreement covers the rental of the property for the specified period."));
        }
        else
        {
            pdfDoc.Add(new Paragraph("The parties agree to the following terms regarding the purchase of the property:"));
            pdfDoc.Add(new Paragraph($"Purchase Price: ${Contract?.Price}"));
            pdfDoc.Add(new Paragraph("This amount represents the agreed-upon purchase price for the property."));
            pdfDoc.Add(new Paragraph($"Closing Date: {Contract?.StartDate}"));
            pdfDoc.Add(new Paragraph("The closing date is the date on which the ownership of the property is officially transferred from the seller to the buyer."));
        }

        pdfDoc.Add(new Paragraph("\n\n"));
            
        pdfDoc.Add(new Paragraph("The parties hereby agree as follows:"));

        pdfDoc.Add(new Paragraph($"1. The subject matter of this contract is {(Contract?.EndDate != null ? "the rental" : "the sale")} of the property mentioned above, along with all related utilities."));
        pdfDoc.Add(new Paragraph($"2. The property will be {(Contract?.EndDate != null ? "leased" : "delivered to the buyer")} on the {(Contract?.EndDate != null ? "lease end date" : "closing date")} mentioned above."));
        pdfDoc.Add(new Paragraph($"3. The {(Contract?.EndDate != null ? "landlord" : "seller")} warrants that they are the legal owner of the property and that it is free from any liens or encumbrances."));
        pdfDoc.Add(new Paragraph("\n\n"));
            
        var signatureLine = new Paragraph("______________________      ______________________ ")
        {
            Alignment = Element.ALIGN_CENTER
        };
        pdfDoc.Add(signatureLine);
            
        var signatureDescription = new Paragraph("    (Seller/Landlord)                           (Buyer/Tenant)")
        {
            Alignment = Element.ALIGN_CENTER
        };
        pdfDoc.Add(signatureDescription);

        pdfDoc.Close();

        var pdfData = memoryStream.ToArray();

        var blobData = new { Type = "application/pdf", Data = pdfData };

        var blob = await JSRuntime.InvokeAsync<string>("createBlob", blobData);
        await JSRuntime.InvokeVoidAsync("saveAsFile", "contract.pdf", blob);
    }
}
